name: Test Build Luxtorpeda

on: pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rust:1.71-buster
    env:
      CARGO_HOME: ./cargo
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Deps
      run: apt-get update && apt-get -y install clang libsdl2-dev scons libpng-dev
    - name: Cache Godot deps
      id: cache-godot
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-build-godot351
        path: |
          /usr/local/bin/godot
          ~/.local/share/godot/templates/3.5.2.stable/linux_x11_64_release
    - name: Install Godot
      if: steps.cache-godot.outputs.cache-hit != 'true'
      run: wget https://downloads.tuxfamily.org/godotengine/3.5.2/Godot_v3.5.2-stable_linux_headless.64.zip && unzip Godot_v3.5.2-stable_linux_headless.64.zip && chmod +x Godot_v3.5.2-stable_linux_headless.64 && rm Godot_v3.5.2-stable_linux_headless.64.zip && mv Godot_v3.5.2-stable_linux_headless.64 /usr/local/bin/godot
    - name: Build Godot Export Template
      if: steps.cache-godot.outputs.cache-hit != 'true'
      run: make godot-export-template SCONS="python3 /usr/bin/scons" && mkdir -p ~/.local/share/godot/templates/3.5.2.stable && mv ./godot-build/bin/godot.x11.opt.64 ~/.local/share/godot/templates/3.5.2.stable/linux_x11_64_release
    - name: Build
      run: make release GODOT=godot
    - name: Package
      env:
        SHA_VALUE: ${{ github.sha }}
        HEAD_REF: ${{ github.head_ref }}
      run: make version="$HEAD_REF"."$SHA_VALUE" luxtorpeda.tar.xz GODOT=godot
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: luxtorpeda.tar.xz
        path: ./luxtorpeda.tar.xz
  clippy:
    runs-on: ubuntu-latest
    container:
      image: rust:1.71-buster
    env:
      CARGO_HOME: ./cargo
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Deps
      run: apt-get update && apt-get -y install clang
    - name: Install Clippy
      run: rustup component add clippy
    - name: Clippy Run
      run: cargo clippy
  fmt:
    runs-on: ubuntu-latest
    container:
      image: rust:1.71-buster
    env:
      CARGO_HOME: ./cargo
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install fmt
      run: rustup component add rustfmt
    - name: fmt Run
      run: cargo fmt --all -- --check
  audit:
    runs-on: ubuntu-latest
    container:
      image: rust:1.71-buster
    env:
      CARGO_HOME: ./cargo
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Audit
      run: cargo install cargo-audit
    - name: Audit Run
      run: cargo audit
